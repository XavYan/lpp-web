var search_data = {"index":{"searchIndex":["alimento","list","object","plato","platoambiental","tddalimentos","error","<=>()","<=>()","<=>()","calc_gei()","calc_perc_carbohydrates()","calc_perc_lipids()","calc_perc_proteins()","calc_terrain()","calc_vct()","each()","empty?()","energetic_value()","extract()","extract_tail()","insert()","insert_more()","insert_tail()","new()","new()","new()","new()","nutritional_footprint()","to_rs()","to_s()","to_s()","to_s()","to_s()","gemfile","gemfile.lock","guardfile","readme","rakefile","setup","tddalimentos.gemspec"],"longSearchIndex":["alimento","list","object","plato","platoambiental","tddalimentos","tddalimentos::error","alimento#<=>()","plato#<=>()","platoambiental#<=>()","platoambiental#calc_gei()","plato#calc_perc_carbohydrates()","plato#calc_perc_lipids()","plato#calc_perc_proteins()","platoambiental#calc_terrain()","plato#calc_vct()","list#each()","list#empty?()","alimento#energetic_value()","list#extract()","list#extract_tail()","list#insert()","list#insert_more()","list#insert_tail()","alimento::new()","list::new()","plato::new()","platoambiental::new()","platoambiental#nutritional_footprint()","list#to_rs()","alimento#to_s()","list#to_s()","plato#to_s()","platoambiental#to_s()","","","","","","",""],"info":[["Alimento","","Alimento.html","","<p>alimento.rb\n<p>Autor &mdash; Himar Manuel Barquín Carrasco\n<p>Web &mdash; github.com/ULL-ESIT-LPP-1920/tdd-alu0101119373\n"],["List","","List.html","","<p>lista.rb\n<p>Autor &mdash; Himar Manuel Barquín Carrasco\n<p>Web &mdash; github.com/ULL-ESIT-LPP-1920/tdd-alu0101119373\n"],["Object","","Object.html","",""],["Plato","","Plato.html","","<p>plato.rb\n<p>Autor &mdash; Himar Manuel Barquín Carrasco\n<p>Web &mdash; github.com/ULL-ESIT-LPP-1920/tdd-alu0101119373\n"],["PlatoAmbiental","","PlatoAmbiental.html","","<p>platoAmbiental.rb\n<p>Autor &mdash; Himar Manuel Barquín Carrasco\n<p>Web &mdash; github.com/ULL-ESIT-LPP-1920/tdd-alu0101119373 …\n"],["TddAlimentos","","TddAlimentos.html","",""],["TddAlimentos::Error","","TddAlimentos/Error.html","",""],["<=>","Alimento","Alimento.html#method-i-3C-3D-3E","(another)","<p>Nos permite comparar alimentos por su valor energético\n<p>Parámetros &mdash; \n<p>another: Otro plato que se compara con …\n\n"],["<=>","Plato","Plato.html#method-i-3C-3D-3E","(another)","<p>Nos permite comparar platos por su Valor Calórico Total\n<p>Parámetros &mdash; \n<p>another: Otro plato que se compara …\n\n"],["<=>","PlatoAmbiental","PlatoAmbiental.html#method-i-3C-3D-3E","(another)","<p>Permite la comparación de dos &#39;platos ambientales&#39; mediante la huella nutricional\n<p>Parámetros &mdash; \n"],["calc_gei","PlatoAmbiental","PlatoAmbiental.html#method-i-calc_gei","()","<p>Calcula el gas de efecto invernadero que se produce al crear el plato\n<p>Devuelve &mdash; GEI del plato\n\n"],["calc_perc_carbohydrates","Plato","Plato.html#method-i-calc_perc_carbohydrates","()","<p>Calcula el porcentaje de carbohidratos del plato\n<p>Devuelve &mdash; Porcentaje de carbohidratos\n\n"],["calc_perc_lipids","Plato","Plato.html#method-i-calc_perc_lipids","()","<p>Calcula el porcentaje de lípidos del plato\n<p>Devuelve &mdash; Porcentaje de lípidos\n\n"],["calc_perc_proteins","Plato","Plato.html#method-i-calc_perc_proteins","()","<p>Calcula el porcetaje de proteínas del plato\n<p>Devuelve &mdash; Porcentaje de proteínas\n\n"],["calc_terrain","PlatoAmbiental","PlatoAmbiental.html#method-i-calc_terrain","()","<p>Calcula el terreno consumido por la producción del plato\n<p>Devuelve &mdash; Valor del terreno\n\n"],["calc_vct","Plato","Plato.html#method-i-calc_vct","()","<p>Calcula el Valor Calórico Total del plato\n<p>Devuelve &mdash; Valor Calórico Total del plato\n\n"],["each","List","List.html#method-i-each","()","<p>Permite que la clase List sea enumerable, lo que nos deja utilizar métodos como max(), min(), reverse_each …\n"],["empty?","List","List.html#method-i-empty-3F","()","<p>Comprueba si la lista está vacía\n<p>Devuelve &mdash; &#39;true&#39; si la lista está vacía. &#39;false&#39; en otro …\n\n"],["energetic_value","Alimento","Alimento.html#method-i-energetic_value","()","<p>Calcula el valor energético del alimento\n<p>Devuelve &mdash; Valor decimal con el valor energético\n\n"],["extract","List","List.html#method-i-extract","()","<p>Extrae el elemento en la cabeza\n<p>Devuelve &mdash; Valor extraído\n\n"],["extract_tail","List","List.html#method-i-extract_tail","()","<p>Extrae el elemento en la cola de la lista\n<p>Devuelve &mdash; Valor extraído\n\n"],["insert","List","List.html#method-i-insert","(valor)","<p>Inserta un valor por la cabeza\n<p>Parámetro &mdash; \n<p>valor: Valor a insertar\n\n"],["insert_more","List","List.html#method-i-insert_more","(arr)","<p>Inserta un conjunto de elementos en la cabeza\n<p>Parámetro &mdash; \n<p>arr: Array de elementos a insertar\n\n"],["insert_tail","List","List.html#method-i-insert_tail","(valor)","<p>Inserta un valor por la cola\n<p>Parámetro &mdash; \n<p>valor: Valor a insertar\n\n"],["new","Alimento","Alimento.html#method-c-new","(name, protein, carbohydrates, lipids, gei, terrain)","<p>Constructor de la clase Alimento\n<p>Parámetros &mdash; \n<p>name: Nombre del alimento\n<p>protein: Proteínas del alimento\n"],["new","List","List.html#method-c-new","()","<p>Constructor de la clase List\n"],["new","Plato","Plato.html#method-c-new","(name, alimentos = [], gramos = [])","<p>Constructor de la clase Plato\n<p>Parámetros &mdash; \n<p>name: Nombre del plato\n<p>alimentos: Conjunto de alimentos que componen …\n"],["new","PlatoAmbiental","PlatoAmbiental.html#method-c-new","(name, alimentos = [], gramos = [])","<p>Constructor de la clase PlatoAmbiental\n<p>Parámetros &mdash; \n<p>name: Nombre del plato\n<p>alimentos: Conjunto de alimentos …\n"],["nutritional_footprint","PlatoAmbiental","PlatoAmbiental.html#method-i-nutritional_footprint","()","<p>Calcula la huella nutricional del plato\n<p>Devuelve &mdash; Valor de la huella nutricional\n\n"],["to_rs","List","List.html#method-i-to_rs","()","<p>Muestra la lista desde la cola\n<p>Devuelve &mdash; Cadena de texto con los elementos de la lista en orden inverso …\n\n"],["to_s","Alimento","Alimento.html#method-i-to_s","()","<p>Imprime la información del alimento\n<p>Devuelve &mdash; Cadena de texto con la información del alimento\n\n"],["to_s","List","List.html#method-i-to_s","()","<p>Muestra la lista desde la cabeza\n<p>Devuelve &mdash; Cadena de texto con los elementos de la lista\n\n"],["to_s","Plato","Plato.html#method-i-to_s","()","<p>Método para imprimir la información del plato\n<p>Devuelve &mdash; Cadena de texto con la información del plato\n\n"],["to_s","PlatoAmbiental","PlatoAmbiental.html#method-i-to_s","()","<p>Imprime la información de la clase Plato y le añade la información del GEI y el terreno\n<p>Devuelve &mdash; Cadena …\n\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p># Specify your gem&#39;s dependencies in tddAlimentos.gemspec gemspec …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  tddAlimentos (0.1.0)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p># A sample Guardfile # More info at github.com/guard/guard#readme\n<p>## Uncomment and set this to only include …\n"],["README","","README_md.html","","<p>Práctica 9: POO: Programación Funcional. Funciones de orden superior.\n<p>En esta práctica vamos a desarrollar …\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rspec/core/rake_task”\n<p>RSpec::Core::RakeTask.new …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["tddAlimentos.gemspec","","tddAlimentos_gemspec.html","","<p>lib = File.expand_path(“lib”, __dir__) $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib) …\n"]]}}